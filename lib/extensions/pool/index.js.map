{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/extensions/pool/index.ts"],"names":[],"mappings":";;;AAAA,4DAA+B;AAE/B,SAAgB,IAAI,CAAI,MAAc,EAAE,KAAe;IACrD,IAAM,UAAU,GAAG,IAAI,cAAK,EAAK,CAAC;IAClC,IAAM,IAAI,GAAQ,EAAE,CAAC;IACrB,KAAK,CAAC,SAAS,CAAC,UAAA,CAAC;QACf,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACb,IAAI,IAAI,CAAC,MAAM,IAAI,MAAM,EAAE;YACzB,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;YAC1B,IAAI,IAAI;gBAAE,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACpC;IACH,CAAC,CAAC,CAAC;IAEK,IAAA,gCAAS,EAAE,gCAAS,EAAE,sBAAI,CAAgB;IAClD,OAAO,EAAE,SAAS,WAAA,EAAE,SAAS,WAAA,EAAE,IAAI,MAAA,EAAE,CAAC;AACxC,CAAC;AAbD,oBAaC","sourcesContent":["import Event from \"../../core\";\n\nexport function Pool<T>(length: number, event: Event<T>) {\n  const observable = new Event<T>();\n  const pool: T[] = [];\n  event.subscribe(e => {\n    pool.push(e);\n    if (pool.length >= length) {\n      const data = pool.shift();\n      if (data) observable.execute(data);\n    }\n  });\n\n  const { subscribe, asPromise, once } = observable;\n  return { subscribe, asPromise, once };\n}\n"]}