{"version":3,"file":"test.js","sourceRoot":"","sources":["../../../src/extensions/wait/test.ts"],"names":[],"mappings":";;;AAAA,+CAAqB;AAErB,IAAI,CAAC,MAAM,EAAE;;;;;gBACL,IAAI,GAAG,IAAI,UAAI,EAAY,CAAC;gBAClC,qBAAM,OAAO,CAAC,GAAG,CAAC;wBAChB,IAAI,OAAO,CAAO,UAAO,CAAC;;;;4CACE,qBAAM,IAAI,CAAC,MAAM,CACzC,MAAM,EACN,cAAM,OAAA,IAAI,OAAO,CAAW,UAAC,CAAC,IAAK,OAAA,UAAU,CAAC,cAAM,OAAA,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,EAAZ,CAAY,EAAE,IAAI,CAAC,EAApC,CAAoC,CAAC,EAAlE,CAAkE,CACzE,EAAA;;wCAHK,KAAoB,SAGzB,EAHO,KAAK,WAAA,EAAE,MAAM,YAAA;wCAIrB,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;wCAC9B,IAAI,MAAM,EAAE;4CACV,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;4CAClC,CAAC,EAAE,CAAC;yCACL;;;;6BACF,CAAC;wBACF,IAAI,OAAO,CAAO,UAAO,CAAC;;;;4CACE,qBAAM,IAAI,CAAC,MAAM,CACzC,MAAM,EACN;4CACE,OAAA,IAAI,OAAO,CAAW,UAAC,CAAC,IAAK,OAAA,UAAU,CAAC,cAAM,OAAA,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAb,CAAa,EAAE,IAAI,CAAC,EAArC,CAAqC,CAAC;wCAAnE,CAAmE,CACtE,EAAA;;wCAJK,KAAoB,SAIzB,EAJO,KAAK,WAAA,EAAE,MAAM,YAAA;wCAKrB,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;6CAC3B,KAAK,EAAL,wBAAK;wCACK,qBAAM,KAAK,CAAC,SAAS,EAAE,EAAA;;wCAA7B,GAAG,GAAG,SAAuB;wCACnC,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wCAC/B,CAAC,EAAE,CAAC;;;;;6BAEP,CAAC;qBACH,CAAC,EAAA;;gBAzBF,SAyBE,CAAC;;;;KACJ,CAAC,CAAC","sourcesContent":["import Wait from \".\";\n\ntest(\"wait\", async () => {\n  const wait = new Wait<[string]>();\n  await Promise.all([\n    new Promise<void>(async (r) => {\n      const { exist, result } = await wait.create(\n        \"test\",\n        () => new Promise<[string]>((r) => setTimeout(() => r([\"solve\"]), 1000))\n      );\n      expect(exist).toBe(undefined);\n      if (result) {\n        expect(result).toEqual([\"solve\"]);\n        r();\n      }\n    }),\n    new Promise<void>(async (r) => {\n      const { exist, result } = await wait.create(\n        \"test\",\n        () =>\n          new Promise<[string]>((r) => setTimeout(() => r([\"solve2\"]), 1000))\n      );\n      expect(result).toBe(undefined);\n      if (exist) {\n        const res = await exist.asPromise();\n        expect(res).toEqual([\"solve\"]);\n        r();\n      }\n    }),\n  ]);\n});\n"]}