{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/core/index.ts"],"names":[],"mappings":"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","sourcesContent":["type EventExecute<T extends any[]> = (...args: T) => void;\ntype EventComplete = () => void;\ntype EventError = (e: any) => void;\n\ntype IEvent<T extends any[]> = {\n  stack: {\n    execute: EventExecute<T>;\n    complete?: EventComplete;\n    error?: EventError;\n    id: number;\n  }[];\n  index: number;\n};\n\nexport default class Event<T extends any[]> {\n  private event: IEvent<T> = { stack: [], index: 0 };\n  ended = false;\n\n  execute = (...args: T) => {\n    if (this.ended) throw new Error(\"event completed\");\n\n    for (let item of this.event.stack) {\n      item.execute(...args);\n    }\n  };\n\n  complete = () => {\n    if (this.ended) throw new Error(\"event completed\");\n\n    for (let item of this.event.stack) {\n      if (item.complete) item.complete();\n    }\n    this.allUnsubscribe();\n    this.ended = true;\n  };\n\n  error = (e: any) => {\n    if (this.ended) throw new Error(\"event completed\");\n\n    for (let item of this.event.stack) {\n      if (item.error) item.error(e);\n    }\n    this.allUnsubscribe();\n  };\n\n  allUnsubscribe = () => {\n    if (this.ended) throw new Error(\"event completed\");\n\n    this.event = { stack: [], index: 0 };\n  };\n\n  subscribe = (\n    execute: EventExecute<T>,\n    complete?: EventComplete,\n    error?: EventError\n  ) => {\n    if (this.ended) throw new Error(\"event completed\");\n\n    const id = this.event.index;\n    this.event.stack.push({ execute, id, complete, error });\n    this.event.index++;\n    const unSubscribe = () => {\n      this.event.stack = this.event.stack.filter(\n        (item) => item.id !== id && item\n      );\n    };\n    return { unSubscribe };\n  };\n\n  once = (\n    execute: EventExecute<T>,\n    complete?: EventComplete,\n    error?: EventError\n  ) => {\n    const off = this.subscribe(\n      (...args) => {\n        off.unSubscribe();\n        execute(...args);\n      },\n      complete,\n      error\n    );\n  };\n\n  watch = (cb: (...args: T) => boolean, timeLimit?: number) =>\n    new Promise<T>((resolve, reject) => {\n      const timeout =\n        timeLimit &&\n        setTimeout(() => {\n          reject(\"Event watch timeout\");\n        }, timeLimit);\n\n      const { unSubscribe } = this.subscribe((...args) => {\n        const done = cb(...args);\n        if (done) {\n          if (timeout) clearTimeout(timeout);\n          unSubscribe();\n          resolve(args);\n        }\n      });\n    });\n\n  asPromise = (timeLimit?: number) =>\n    new Promise<T>((resolve, reject) => {\n      const timeout =\n        timeLimit &&\n        setTimeout(() => {\n          reject(\"Event asPromise timeout\");\n        }, timeLimit);\n\n      this.once(\n        (...args) => {\n          if (timeout) clearTimeout(timeout);\n          resolve(args);\n        },\n        () => {\n          if (timeout) clearTimeout(timeout);\n          resolve([] as any);\n        },\n        (err) => {\n          if (timeout) clearTimeout(timeout);\n          reject(err);\n        }\n      );\n    });\n\n  get returnTrigger() {\n    const { execute, error, complete } = this;\n    return { execute, error, complete };\n  }\n\n  get returnListener() {\n    const { subscribe, once, asPromise } = this;\n    return { subscribe, once, asPromise };\n  }\n\n  get length() {\n    return this.event.stack.length;\n  }\n}\n"]}